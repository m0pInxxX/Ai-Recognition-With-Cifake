# DETEKSI GAMBAR AI VS ASLI: PENDEKATAN HYBRID MENGGUNAKAN DEEP LEARNING DAN ANALISIS FITUR TRADISIONAL

## ABSTRAK
Perkembangan teknologi Artificial Intelligence (AI) dalam menghasilkan gambar telah mencapai titik di mana semakin sulit membedakan antara gambar yang dihasilkan AI dengan gambar asli. Penelitian ini mengusulkan sebuah sistem deteksi otomatis yang menggabungkan pendekatan deep learning dengan analisis fitur tradisional untuk membedakan gambar AI dari gambar asli. Sistem yang diusulkan menggunakan arsitektur hybrid yang menggabungkan EfficientNetB0 untuk ekstraksi fitur deep learning dengan berbagai teknik analisis fitur tradisional seperti Local Binary Patterns (LBP), Gray Level Co-occurrence Matrix (GLCM), dan analisis noise.

## BAB I: PENDAHULUAN

### 1.1 Latar Belakang
Kemajuan dalam bidang AI, khususnya dalam Generative Adversarial Networks (GANs) dan model difusi, telah memungkinkan pembuatan gambar yang sangat realistis. Kemampuan ini membawa tantangan baru dalam membedakan konten asli dari konten yang dihasilkan AI. Kebutuhan akan sistem deteksi otomatis yang akurat menjadi semakin penting untuk berbagai aplikasi, termasuk forensik digital, verifikasi konten media, dan keamanan siber.

### 1.2 Rumusan Masalah
1. Bagaimana mengembangkan sistem yang dapat secara akurat membedakan gambar AI dari gambar asli?
2. Apakah pendekatan hybrid dapat meningkatkan akurasi deteksi dibandingkan dengan pendekatan tunggal?
3. Bagaimana mengimplementasikan sistem yang user-friendly untuk penggunaan praktis?

### 1.3 Tujuan Penelitian
1. Mengembangkan sistem deteksi gambar AI yang akurat dan efisien
2. Mengevaluasi efektivitas pendekatan hybrid dalam deteksi gambar AI
3. Mengimplementasikan sistem dengan antarmuka yang user-friendly

### 1.4 Manfaat Penelitian
1. Kontribusi pada bidang forensik digital
2. Peningkatan keamanan dan verifikasi konten media
3. Pengembangan tools praktis untuk deteksi gambar AI

## BAB II: TINJAUAN PUSTAKA

### 2.1 Deep Learning dalam Computer Vision
#### 2.1.1 Convolutional Neural Networks (CNN)
CNN merupakan arsitektur neural network yang dirancang khusus untuk pemrosesan data visual. Arsitektur ini terdiri dari:
- Convolutional layers
- Pooling layers
- Fully connected layers
- Activation functions

#### 2.1.2 EfficientNet
EfficientNet merupakan family model CNN yang menggunakan compound scaling untuk menyeimbangkan kedalaman, lebar, dan resolusi network. Keunggulan EfficientNet:
- Efisiensi komputasi tinggi
- Performa state-of-the-art
- Skalabilitas yang baik

### 2.2 Analisis Fitur Tradisional
#### 2.2.1 Local Binary Patterns (LBP)
LBP adalah metode analisis tekstur yang:
- Menghitung pola biner lokal di sekitar setiap pixel
- Invariant terhadap rotasi dan illuminasi
- Efektif untuk analisis tekstur

#### 2.2.2 Gray Level Co-occurrence Matrix (GLCM)
GLCM menganalisis tekstur melalui:
- Perhitungan matriks co-occurrence
- Ekstraksi fitur statistik
- Analisis pola spasial

#### 2.2.3 Noise Analysis
Analisis noise meliputi:
- Estimasi tingkat noise
- Analisis pola noise
- Deteksi anomali

### 2.3 Hybrid Approaches
Pendekatan hybrid menggabungkan:
- Deep learning features
- Traditional features
- Ensemble methods

## BAB III: METODOLOGI PENELITIAN

### 3.1 Arsitektur Sistem
#### 3.1.1 Model Hybrid
```
Input Image
├── CNN Path (EfficientNetB0)
│   └── Global Average Pooling
└── Traditional Feature Path
    ├── LBP Analysis
    ├── GLCM Analysis
    └── Noise Analysis

Combined Features
└── Neural Network
    ├── Dense Layers
    ├── Batch Normalization
    └── Dropout
```

#### 3.1.2 Preprocessing Pipeline
1. Image Resizing (224x224)
2. Channel Normalization
3. Feature Extraction
4. Feature Fusion

### 3.2 Implementasi
#### 3.2.1 Development Stack
- Python 3.8+
- TensorFlow 2.x
- OpenCV
- scikit-image
- Tkinter

#### 3.2.2 Core Components
1. Feature Extraction Module
2. Classification Module
3. GUI Interface
4. Batch Processing System

### 3.3 Training Process
#### 3.3.1 Dataset
- Training set composition
- Validation split
- Test set evaluation

#### 3.3.2 Training Parameters
- Batch size: 32
- Learning rate: 0.001
- Optimizer: Adam
- Loss function: Binary Cross-Entropy

## BAB IV: HASIL DAN PEMBAHASAN

### 4.1 Performa Model
#### 4.1.1 Metrics
- Accuracy: XX%
- Precision: XX%
- Recall: XX%
- F1-Score: XX%

#### 4.1.2 Analysis
- ROC Curve analysis
- Confusion Matrix interpretation
- Error analysis

### 4.2 System Evaluation
#### 4.2.1 Processing Speed
- Single image processing time
- Batch processing efficiency
- Resource utilization

#### 4.2.2 User Experience
- Interface usability
- Feature accessibility
- System reliability

### 4.3 Case Studies
#### 4.3.1 Real-world Applications
- Media verification
- Content authentication
- Forensic analysis

#### 4.3.2 Limitations
- Edge cases
- Performance boundaries
- Technical constraints

## BAB V: KESIMPULAN DAN SARAN

### 5.1 Kesimpulan
1. Efektivitas pendekatan hybrid
2. Performa sistem dalam praktik
3. Implikasi untuk forensik digital

### 5.2 Saran
1. Pengembangan masa depan
2. Peningkatan akurasi
3. Optimisasi sistem

## DAFTAR PUSTAKA

1. Tan, M., & Le, Q. (2019). EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. ICML.
2. Ojala, T., et al. (2002). Multiresolution Gray-Scale and Rotation Invariant Texture Classification with Local Binary Patterns. IEEE TPAMI.
3. Haralick, R.M., et al. (1973). Textural Features for Image Classification. IEEE SMC.
4. [Additional relevant references...]

## LAMPIRAN

### A. Kode Implementasi
[Detailed code snippets and explanations]

### B. Hasil Eksperimen
[Detailed experimental results and analysis]

### C. Dokumentasi Sistem
[System documentation and user guide] 